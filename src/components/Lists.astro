---
import Card from '../components/Card.astro';
import Popular from '../components/Popular.astro';

let lists = [];
const searchVal = Astro.url.searchParams.get('s');
if (!searchVal) {
    try {
        const response = await fetch(`${Astro.url.origin}/api/get?t=se`);
        if (response.ok) {
            const json = await response.json();
            lists = json.data.lists;
        }
    } catch (error) {
        //
    }
} else {
    try {
        const response = await fetch(`${Astro.url.origin}/api/search-by`, {method: 'POST', body: JSON.stringify({
            keyword: searchVal
        })});
        if (response.ok) {
            const json = await response.json();
            lists = json.lists;
        }
    } catch (error) {
        
    }
}
---
<div class="p-2">
    <div class="p-2 flex justify-center">
        <div id="searchBox" class="w-[80%] max-w-2xl relative">
            <input
                type="text"
                value={searchVal || ''}
                placeholder="Keyword to search GPTs"
                class="flex h-12 w-full rounded-md border-2 border-green-600 bg-white px-3 py-1 text-sm shadow-sm transition-colors placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 dark:bg-slate-600"
            />
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="absolute right-4 top-[50%] mt-[-8px] cursor-pointer"><polyline points="9 10 4 15 9 20"></polyline><path d="M20 4v7a4 4 0 0 1-4 4H4"></path></svg>
        </div>
    </div>
    <div class="flex justify-center">
        <button
            id="magic"
            class=" disabled:shadow-none disabled:opacity-70 disabled:active:scale-100 border-0 bg-gray-100 rounded-md py-1 px-2 text-xs flex items-center gap-1 shadow-sm dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 active:scale-95 group"
            type="button"
        >
            <svg class="text-yellow-500 group-disabled:hidden" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sparkles"><path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"/><path d="M5 3v4"/><path d="M19 17v4"/><path d="M3 5h4"/><path d="M17 19h4"/></svg>
            <svg class="animate-spin hidden group-disabled:block" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-loader-2"><path d="M21 12a9 9 0 1 1-6.219-8.56"/></svg>
            <span>I'm Feeling Lucky</span>
        </button>
    </div>
</div>
<div class="grid grid-cols-1 gap-5 sm:grid-cols-2 md:grid-cols-3 py-4" id="lists">
    <Popular />
    {!searchVal ? <h4 class="text-2xl font-bold col-span-3 mb-2">Recommended For You</h4> : <h4 class="text-2xl font-bold col-span-3 mb-2">Search "{searchVal}" Results</h4>}
    {lists.length ? lists.map((item: any) => <Card item={item} />) : <div class="text-center col-span-3 py-4">Can't find the "{searchVal}" GPTs</div>}
</div>

<script>

let isLoading = false;
const magicBtn = document.getElementById('magic');
const searchInput = document.querySelector('#searchBox input') as HTMLInputElement;
const searchBtn = document.querySelector('#searchBox svg');
const readerList = (lists: any[], searchVal?: string) => {
    let html = !searchVal ? `<h4 class="text-2xl font-bold col-span-3 mb-2">Recommended For You</h4>` : `<h4 class="text-2xl font-bold col-span-3 mb-2">Search "${searchVal}" Results</h4>`;
    for(const item of lists) {
        html += `
            <a
                class="flex gap-3 bg-white rounded-2xl p-5 items-start cursor-pointer select-none overflow-hidden group hover:shadow-lg dark:bg-black/50"
                href="/gpts-store/${item.search_key}"
            >
                ${
                    item.icon ? `<img loading="lazy" decoding="async" class="flex w-12 h-12 md:w-20 md:h-20 rounded-full flex-shrink-0 bg-gray-100 overflow-hidden dark:bg-gray-800" src=${item.icon} alt=${item.title} onerror="this.src='/none.png'">` :
                    `<div class="flex w-12 h-12 md:w-20 md:h-20 items-center justify-center rounded-full flex-shrink-0 bg-gray-100 overflow-hidden dark:bg-gray-800">
                        <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="text-token-secondary h-2/3 w-2/3" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line></svg>
                    </div>`
                }
                <div class="w-0 flex-1">
                    <h3 class="font-medium truncate text-gray-900 dark:text-gray-50 text-sm md:text-lg  transition group-hover:text-[#0b7b94] dark:group-hover:text-[#6cc3d7]">
                        ${item.title}
                    </h3>
                    ${item.author && `<p class="opacity-70 truncate text-xs md:text-sm mt-1">by <span class="text-[#0b7b94] dark:text-[#64aebf]">${item.author}<span></p>`}
                    <p class="text-gray-500 mt-1 text-xs md:text-sm dark:text-gray-400">
                        ${item.description}
                    </p>
                </div>
            </a>
        `
    }
    return html;
}
const handleMagicClick = async () => {
    if (isLoading) return;
    const element = document.getElementById('lists');
    if (!element) return;
    if (searchInput) searchInput.value = '';
    window.history.replaceState(null, '', '/');
    isLoading = true;
    magicBtn?.setAttribute('disabled', 'true');
    const response = await fetch(`/api/get`);
    isLoading = false;
    magicBtn?.removeAttribute('disabled');
    if (response.ok) {
        const json = await response.json();
        const lists = json?.data?.lists;
        if (lists?.length) {
            element.innerHTML = readerList(lists);
        }
    }
}
const toSearch = async () => {
    if (isLoading) return;
    const element = document.getElementById('lists');
    if (!element) return;
    const val = searchInput?.value || '';
    const search = val ? `/?s=${val}` : '/';
    window.history.replaceState(null, '', search);
    isLoading = true;
    const response = await fetch(`/api/search-by`, {method: 'POST', body: JSON.stringify({
        keyword: val
    })});
    isLoading = false;
    if (response.ok) {
        const json = await response.json();
        const lists = json?.lists;
        if (lists?.length) {
            element.innerHTML = readerList(lists, val);
        } else if(val) {
            element.innerHTML = `<div class="text-center col-span-3 py-4">Can't find the "${val}" GPTs</div>`
        }
    }
}
const handleSearch = async (e: KeyboardEvent) => {
    if (e.key === 'Enter') {
        e.preventDefault();
        toSearch();
        return;
    }
}
magicBtn?.addEventListener('click', handleMagicClick);
searchBtn?.addEventListener('click', toSearch);
searchInput?.addEventListener('keydown', handleSearch)
</script>